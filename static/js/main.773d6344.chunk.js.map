{"version":3,"sources":["utils/history.js","utils/index.js","config/Roles.js","components/common/hoc/CenterToScreen.js","components/common/JumbotronWrapper.js","components/common/TopNav.js","components/common/NotFound.js","components/LandingPage.js","components/Login.js","components/Register.js","components/ForgotPassword.js","components/Module1.js","components/Module2.js","components/Module3.js","routes/MapAllowedRoutes.js","components/ModuleN.js","components/ModuleNChild1.js","components/ModuleNChild2.js","components/ModuleNChild3.js","components/Profile.js","components/Dashboard.js","config/PrivateRoutesConfig.js","routes/PrivateRoutes.js","routes/PublicRoutes.js","routes/Auth.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","isLoggedIn","localStorage","getItem","getAllowedRoutes","routes","roles","JSON","parse","filter","_ref","permission","arr","Array","isArray","length","isArrayWithLength","intersection","Roles","CenterToScreen","Component","props","React","createElement","className","JumbotronWrapper","Col","col","Jumbotron","title","description","style","color","children","defaultProps","md","memo","TopNav","history","useHistory","map","path","Link","key","to","prefix","Button","onClick","removeItem","push","NotFound","jumbotronProps","navOptions","margin","width","selected","setSelected","useState","Form","Group","controlId","Label","Control","as","value","onChange","e","options","target","i","multiple","Alert","variant","setItem","stringify","disabled","basePath","isAddNotFound","match","useRouteMatch","Switch","route","component","rest","Route","Object","assign","allowedRoutes","_ref2","marginRight","MapAllowedRoutes","PrivateRoutesConfig","Module1","exact","Module2","Module3","ModuleN","ModuleNChild1","ModuleNChild2","ModuleNChild3","Profile","PrivateRoutes","Fragment","Redirect","PublicRoutes","ForgotPassword","Register","Login","LandingPage","Router","Auth","App","constructor","super","window","addEventListener","oldValue","newValue","alert","render","Container","fluid","Row","Routes","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.773d6344.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({});\n","import { intersection } from 'lodash';\n\nexport function isLoggedIn() {\n\t/*\n\t\t* Note:\n\t\t*  This app assume if local storage have roles it means\n\t\t*  user is authenticated you can update this logic as per your app.\n\t*/\n\treturn !!localStorage.getItem('roles')\n}\n\nexport function isArrayWithLength(arr) {\n\treturn (Array.isArray(arr) && arr.length)\n}\n\nexport function getAllowedRoutes(routes) {\n\tconst roles = JSON.parse(localStorage.getItem('roles'));\n\treturn routes.filter(({ permission }) => {\n\t\tif(!permission) return true;\n\t\telse if(!isArrayWithLength(permission)) return true;\n\t\telse return intersection(permission, roles).length;\n\t});\n}\n","/*\n* These are the placeholder roles you can replace these with yours\n*/\nexport default {\n\tSUPER_ADMIN: 'SUPER_ADMIN',\n\tADMIN: 'ADMIN',\n\tMANAGER: 'MANAGER',\n\tCUSTOMER: 'CUSTOMER',\n\tGUEST: 'GUEST'\n};\n","import React from 'react';\n\nconst CenterToScreen = (Component) => (props) => {\n\treturn (\n\t\t<div className=\"center-to-screen\">\n\t\t\t<Component {...props} />\n\t\t</div>\n\t);\n};\n\nexport default CenterToScreen;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Jumbotron } from 'react-bootstrap';\nimport { CenterToScreen } from './hoc';\n\nconst JumbotronWrapper = (props) => {\n\treturn (\n\t\t<Col {...props.col}>\n\t\t\t<Jumbotron>\n\t\t\t\t<h1>{props.title}</h1>\n\t\t\t\t<p>{props.description}</p>\n\t\t\t\t<div style={{color: '#0056b3'}}>{props.children}</div>\n\t\t\t</Jumbotron>\n\t\t</Col>\n\t);\n};\n\nJumbotronWrapper.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\tdescription: PropTypes.string,\n\tcol: PropTypes.object,\n};\n\nJumbotronWrapper.defaultProps = {\n\tdescription: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).`,\n\tcol: { md: '6' }\n};\n\nexport default memo(CenterToScreen(JumbotronWrapper));\n","import React, { memo } from 'react';\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { isLoggedIn } from 'utils';\n\nfunction TopNav(props) {\n\tlet history = useHistory();\n\n\tfunction handleLogout() {\n\t\tlocalStorage.removeItem('roles');\n\t\thistory.push('/');\n\t}\n\n\treturn (\n\t\t<div className={`w3-bar w3-padding w3-card ${props.className}`} >\n\t\t\t<div className=\"w3-display-topleft w3-padding-large w3-xlarge\">\n\t\t\t\tVRV Intern Assignment\n\t\t\t</div>\n\t\t\t<div className=\"w3-right\">\n\t\t\t\t{props.routes.map(({ path, title }) => (\n\t\t\t\t\t<Link key={path} className=\"w3-bar-item\" to={`${props.prefix}${path}`}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</Link>\n\t\t\t\t))}\n\t\t\t\t{isLoggedIn() && <Button onClick={handleLogout}>Logout</Button> }\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nTopNav.propTypes = {\n\troutes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tpath: PropTypes.string.isRequired,\n\t\t\ttitle: PropTypes.string.isRequired\n\t\t})\n\t).isRequired,\n\tprefix: PropTypes.string,\n\tclassName: PropTypes.string\n};\n\nTopNav.defaultProps ={\n\tprefix: '',\n\tclassName: ''\n};\n\nexport default memo(TopNav);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport JumbotronWrapper from './JumbotronWrapper';\n\nconst NotFound = (props) => (\n\t<JumbotronWrapper {...props.jumbotronProps}>\n\t\t{props.children}\n\t</JumbotronWrapper>\n);\n\nNotFound.propTypes = {\n\tjumbotronProps: PropTypes.shape({\n\t\ttitle: PropTypes.string,\n\t\tdescription: PropTypes.string\n\t})\n};\n\nNotFound.defaultProps = {\n\tjumbotronProps: {\n\t\ttitle: '404 not found'\n\t},\n\tchildren: (<Link to=\"/\">Back to home</Link>)\n};\n\nexport default memo(NotFound);\n","import React, { memo } from 'react';\nimport { TopNav } from './common';\n\nconst navOptions = [\n\t{title: 'Login', path: '/login'},\n\t{title: 'Register', path: '/register'}\n];\n\nfunction LandingPage() {\n\treturn (\n\t\t<div className=\"bgimg w3-display-container w3-animate-opacity w3-text-white\">\n\t\t\t<TopNav routes={navOptions}/>\n\t\t\t<div className=\"w3-display-middle\">\n\t\t\t\t<h1 className=\"w3-jumbo w3-animate-top\">Welcome to RBAC sys</h1>\n\t\t\t\t<hr className=\"w3-border-grey\" style={{margin: 'auto', width: '40%'}} />\n\t\t\t</div>\n\t\t\t<div className=\"w3-display-bottomleft w3-padding-large\">\n\t\t\t\tDeveloped by Jeetu Singh with ❤️\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default memo(LandingPage);\n","import React, { memo, useState } from 'react';\nimport { Alert, Form, Button } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport { JumbotronWrapper } from './common';\n\nfunction Login() {\n\tlet [selected, setSelected] = useState([]);\n\tlet history = useHistory();\n\n\tfunction handleChange(e) {\n\t\tconst { options } = e.target;\n\t\tlet selected = [];\n\n\t\tfor (let i = 0; i < options.length; i++) {\n\t\t\tif (options[i].selected) {\n\t\t\t\tselected.push(options[i].value);\n\t\t\t}\n\t\t}\n\t\tsetSelected(selected);\n\t}\n\n\tfunction handleClick() {\n\t\tlocalStorage.setItem('roles', JSON.stringify(selected));\n\t\thistory.push('/app');\n\t}\n\n\treturn (\n\t\t<JumbotronWrapper title=\"Login\" description=\"\">\n\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\n\t\t\t\t<Form.Label>Select Role:</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tas=\"select\"\n\t\t\t\t\tvalue={selected}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tmultiple\n\t\t\t\t>\n\t\t\t\t\t{/* TODO: Dynamic role options */}\n\t\t\t\t\t<option value=\"SUPER_ADMIN\">SUPER_ADMIN</option>\n\t\t\t\t\t<option value=\"ADMIN\">ADMIN</option>\n\t\t\t\t\t<option value=\"MANAGER\">MANAGER</option>\n\t\t\t\t\t<option value=\"CUSTOMER\">CUSTOMER</option>\n\t\t\t\t\t<option value=\"GUEST\">GUEST</option>\n\t\t\t\t</Form.Control>\n\t\t\t</Form.Group>\n\t\t\t<Alert variant=\"primary\">Support multi roles.</Alert>\n\t\t\t<div className=\"text-right\">\n\t\t\t\t<Link to=\"/forgot-password\">Forgot Password</Link>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t\t<Link to=\"/register\">Register</Link>\n\t\t\t</div>\n\t\t\t<Button\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tonClick={handleClick}\n\t\t\t\tdisabled={!selected.length}\n\t\t\t>\n\t\t\t\tLogin\n\t\t\t</Button>\n\t\t</JumbotronWrapper>\n\t);\n}\n\nexport default memo(Login);\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { JumbotronWrapper } from './common';\n\nfunction Register() {\n\treturn (\n\t\t<JumbotronWrapper title=\"Register\">\n\t\t\t<Link to=\"/login\">\n\t\t\t\tBack to login\n\t\t\t</Link>\n\t\t</JumbotronWrapper>\n\t)\n}\n\nexport default memo(Register);\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { JumbotronWrapper } from './common';\n\nfunction ForgotPassword() {\n\treturn (\n\t\t<JumbotronWrapper title=\"ForgotPassword\">\n\t\t\t<Link to=\"/login\">\n\t\t\t\tBack to login\n\t\t\t</Link>\n\t\t</JumbotronWrapper>\n\t)\n}\n\nexport default memo(ForgotPassword);\n","import React, { memo } from 'react';\nimport { JumbotronWrapper } from './common';\n\nfunction Module1() {\n\treturn (\n\t\t<JumbotronWrapper title=\"Module - 1\" />\n\t)\n}\n\nexport default memo(Module1);\n","import React, { memo } from 'react';\nimport { JumbotronWrapper } from './common';\n\nfunction Module2() {\n\treturn (\n\t\t<JumbotronWrapper title=\"Module - 2\" />\n\t)\n}\n\nexport default memo(Module2);\n","import React, { memo } from 'react';\nimport { JumbotronWrapper } from './common';\n\nfunction Module3() {\n\treturn (\n\t\t<JumbotronWrapper title=\"Module - 3\" />\n\t)\n}\n\nexport default memo(Module3);\n","import React, { memo } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { NotFound } from 'components/common';\n\n/*\n* This is the route utility component used for generating\n* routes and child routes it only requires routes array and basePath\n*/\nfunction MapAllowedRoutes({routes, basePath, isAddNotFound}) {\n\tconst match = useRouteMatch(basePath);\n\treturn (\n\t\t<Switch>\n\t\t\t{routes.map((route) => {\n\t\t\t\t/*\n\t\t\t\t* some variables are used by below code\n\t\t\t\t* some are not used by the code but destructure due to remove from rest object\n\t\t\t\t* just make sure that rest object only contain props that supported by react-router's route component\n\t\t\t\t* you may find props list here https://reactrouter.com/web/api/Route\n\t\t\t\t*/\n\t\t\t\tconst { path, component: Component, children, title, permission, ...rest } = route;\n\n\t\t\t\treturn (\n\t\t\t\t\t<Route {...rest} key={path} path={`${match.path}${path}`}>\n\t\t\t\t\t\t<Component children={children} />\n\t\t\t\t\t</Route>\n\t\t\t\t)\n\t\t\t})}\n\t\t\t{isAddNotFound && <Route><NotFound /></Route>}\n\t\t</Switch>\n\t)\n}\n\nexport default memo(MapAllowedRoutes);\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAllowedRoutes } from 'utils';\nimport { JumbotronWrapper } from './common';\nimport MapAllowedRoutes from 'routes/MapAllowedRoutes';\n\nconst basePath = '/app/module-n';\nfunction ModuleN({ children }) {\n\tconst allowedRoutes = getAllowedRoutes(children);\n\treturn (\n\t\t<JumbotronWrapper title=\"Module - N\" >\n\t\t\t{allowedRoutes.map(({ path, title }) =>\n\t\t\t\t<Link key={path} to={`${basePath}${path}`} style={{ marginRight: '10px' }}>{title}</Link>\n\t\t\t)}\n\t\t\t<MapAllowedRoutes\n\t\t\t\troutes={allowedRoutes}\n\t\t\t\tbasePath={basePath}\n\t\t\t/>\n\t\t</JumbotronWrapper>\n\t)\n}\n\nexport default memo(ModuleN);\n","import React, { memo } from 'react';\nimport { JumbotronWrapper } from './common';\n\nfunction ModuleNChild1() {\n\treturn (\n\t\t<JumbotronWrapper title=\"Module - N - Child - 1\" col={{md: '12'}} />\n\t)\n}\n\nexport default memo(ModuleNChild1);\n","import React, { memo } from 'react';\nimport { JumbotronWrapper } from './common';\n\nfunction ModuleNChild2() {\n\treturn (\n\t\t<JumbotronWrapper title=\"Module - N - Child - 2\" col={{md: '12'}} />\n\t)\n}\n\nexport default memo(ModuleNChild2);\n","import React, { memo } from 'react';\nimport { JumbotronWrapper } from './common';\n\nfunction ModuleNChild3() {\n\treturn (\n\t\t<JumbotronWrapper title=\"Module - N - Child - 3\" col={{md: '12'}} />\n\t)\n}\n\nexport default memo(ModuleNChild3);\n","import React, { memo } from 'react';\nimport { JumbotronWrapper } from './common';\n\nfunction Profile() {\n\treturn (\n\t\t<JumbotronWrapper title=\"Profile\" />\n\t)\n}\n\nexport default memo(Profile);\n","import React, { memo } from 'react';\nimport { JumbotronWrapper } from './common';\n\nfunction Dashboard() {\n\treturn (\n\t\t<JumbotronWrapper title=\"Dashboard\" />\n\t)\n}\n\nexport default memo(Dashboard);\n","import { Roles } from 'config'\n\n// Components\nimport {\n\tModule1,\n\tModule2,\n\tModule3,\n\tModuleN,\n\tModuleNChild1,\n\tModuleNChild2,\n\tModuleNChild3,\n\tDashboard,\n\tProfile,\n} from 'components';\n\n// TODO:\n/*\n* 1. Make title optional\n* 2. Make title multi type support ie: (string, node, react element)\n* 3. Add child route support\n* */\n\n\n/*\n* Route config object supports all react-router's route component props with some additional props ie: (title, permission, children)\n* you can add or remove props from config object it's means it is super customizable and support upto N nesting, child routes must follow the same parent shape,\n* it means the config object is same for both there is no additional key for child nor for parent.\n* you can find route props from here https://reactrouter.com/web/api/Route let's take a look at some additional props\n* 1. permission: permission is an optional prop and it's type is an array of roles, permission is used for allowing certain users/roles\n*  \tto have access of that route and if you skip/omit the permission or it's an empty array that means every authenticated user/role have access to that route.\n* 2. title: title is an optional prop and it's type is a string|node it is used for mapping route link into a navigation\n* 3. children: children is also an optional prop and it's type is an array of route config objects, children are used for nested routes\n* */\n\n\nexport default [\n\t{\n\t\tcomponent: Module1,\n\t\tpath: '/',\n\t\ttitle: 'Module - 1',\n\t\texact: true,\n\t},\n\t{\n\t\tcomponent: Module2,\n\t\tpath: '/module-2',\n\t\ttitle: 'Module - 2',\n\t},\n\t{\n\t\tcomponent: Module3,\n\t\tpath: '/module-3',\n\t\ttitle: 'Module - 3',\n\t},\n\t{\n\t\tcomponent: ModuleN,\n\t\tpath: '/module-n',\n\t\ttitle: 'Module - N',\n\t\tpermission: [\n\t\t\tRoles.SUPER_ADMIN,\n\t\t\tRoles.ADMIN,\n\t\t\tRoles.MANAGER\n\t\t],\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tcomponent: ModuleNChild1,\n\t\t\t\tpath: '/child-1',\n\t\t\t\ttitle: 'Child - 1',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomponent: ModuleNChild2,\n\t\t\t\tpath: '/child-2',\n\t\t\t\ttitle: 'Child - 2',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomponent: ModuleNChild3,\n\t\t\t\tpath: '/child-3',\n\t\t\t\ttitle: 'Child - 3',\n\t\t\t\tpermission: [\n\t\t\t\t\tRoles.SUPER_ADMIN,\n\t\t\t\t\tRoles.ADMIN\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tcomponent: Dashboard,\n\t\tpath: '/dashboard',\n\t\ttitle: 'Dashboard',\n\t\tpermission: [\n\t\t\tRoles.SUPER_ADMIN,\n\t\t\tRoles.ADMIN,\n\t\t],\n\t},\n\t{\n\t\tcomponent: Profile,\n\t\tpath: '/profile',\n\t\ttitle: 'Profile',\n\t\tpermission: [\n\t\t\tRoles.SUPER_ADMIN,\n\t\t\tRoles.ADMIN,\n\t\t\tRoles.MANAGER,\n\t\t\tRoles.CUSTOMER\n\t\t],\n\t},\n]\n","import React, { Fragment } from 'react';\nimport { Redirect, useRouteMatch } from 'react-router-dom';\nimport { getAllowedRoutes, isLoggedIn } from 'utils';\nimport { PrivateRoutesConfig } from 'config';\nimport { TopNav } from 'components/common';\nimport MapAllowedRoutes from 'routes/MapAllowedRoutes';\n\nfunction PrivateRoutes() {\n\tconst match = useRouteMatch('/app');\n\tlet allowedRoutes = [];\n\n\tif (isLoggedIn()) allowedRoutes = getAllowedRoutes(PrivateRoutesConfig);\n\telse return <Redirect to=\"/\" />;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<TopNav routes={allowedRoutes} prefix={match.path} className=\"bg-white\" />\n\t\t\t<MapAllowedRoutes routes={allowedRoutes} basePath=\"/app\" isAddNotFound />\n\t\t</Fragment>\n\t);\n}\n\nexport default PrivateRoutes;\n","import React, { Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Login, Register, ForgotPassword, LandingPage } from 'components';\n\nfunction PublicRoutes() {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/forgot-password\">\n\t\t\t\t\t<ForgotPassword />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t<Register />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"\">\n\t\t\t\t\t<LandingPage />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Fragment>\n\t)\n}\n\nexport default PublicRoutes;\n","import React, { memo } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { isLoggedIn } from 'utils';\nimport PublicRoutes from './PublicRoutes';\n\n/*\n* TODO: when user loggedIn he/she unable to goto public routes\n*  ie: ('/about', '/contact', 'any other public route')\n*/\nfunction Auth() {\n\t// TODO: temp logged-in check, update as per your app logic\n\treturn isLoggedIn() ? (\n\t\t\t<Redirect to=\"/app\" />\n\t\t) : (\n\t\t\t<PublicRoutes />\n\t\t)\n}\n\nexport default memo(Auth);\n","import React, { memo } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from 'utils/history';\nimport PrivateRoutes from './PrivateRoutes';\nimport Auth from './Auth';\n\nfunction Routes() {\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/app\">\n\t\t\t\t\t<PrivateRoutes />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"\">\n\t\t\t\t\t<Auth />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t)\n}\n\nexport default memo(Routes);\n\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Routes from 'routes';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\twindow.addEventListener('storage', ({oldValue, newValue}) => {\n\t\t\t// Note: For this app we don't have any server to verify role/roles, in your case you can verify role/roles from your server and update accordingly.\n\t\t\talert(`You can not change role/roles from ${oldValue} to ${newValue}, if you want to change role/roles please log out and then log in with a different roles.`);\n\t\t\tlocalStorage.setItem('roles', oldValue);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"p-0\">\n\t\t\t\t\t\t<Routes />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.register();\n"],"sourceRoot":""}